<document>
  <body>
    <section name="Deployment">
      <p>At this point, the code has been written and just needs to be deployed.  Deployment of the code will be into an OSGi based container called <a href="http://karaf.apache.org">Apache Karaf</a>.  The following steps walk through what will be required complete this deployment.</p>
      <subsection name="Karaf Features">
	<p>To include your code as maven dependencies to the mapseq-karaf features project, then you need to familiarize yourself with the &lt;mapseq&gt;/mapseq-karaf/src/main/resources/features.xml file and add your projects housing your code into this file.</p>
	<p>The contents of this file break up the logic parts of MaPSeq into deployable "features".  Currently, these include:</p>
	<ul>
	  <li>mapseq-common</li>
	  <li>mapseq-config</li>
	  <li>mapseq-dao</li>
	  <li>mapseq-web-services</li>
	  <li>mapseq-modules</li>
	  <li>mapseq-pipelines</li>
	  <li>mapseq-message-broker</li>
	  <li>mapseq-messaging</li>
	  <li>mapseq</li>
	</ul>
	<p>Please take care when working with this file as features can depend on other features, potentially creating a dependency loop.</p>
      </subsection>
      <subsection name="Deploying your code using the Karaf features file">
	<p>Using the features provisioning mechanism is recommended way to deploy your code to Karaf.</p>
	<ol>
	  <li><a href="http://karaf.apache.org/index/community/download.html">Download</a> the latest version of Apache Karaf.</li>
	  <li>Explode the apache-karaf-&lt;version&gt;.tar.gz into a desired location.</li>
	  <li>Run the fixKaraf.sh shell script against your new Apache Karaf install.</li>
	  <li>Start the Karaf container</li>
	  <li>Add the MaPSeq features url</li>
	  <li>Add the MaPSeq features</li>	  
	</ol>	
	<p>The following set of commands should work on most Linux OS's:</p>
	<pre>
$ wget http://apache.cs.utah.edu//karaf/2.2.5/apache-karaf-2.2.5.tar.gz	  
$ tar -xzf apache-karaf-2.2.5.tar.gz
$ export KARAF_HOME=./apache-karaf-2.2.5; &lt;mapseq&gt;/bin/fixKaraf.sh
$ ./apache-karaf-2.2.5/bin/karaf
karaf@root> features:addurl mvn:edu.unc.mapseq/mapseq-karaf/1.0-SNAPSHOT/xml/features
karaf@root> features:install mapseq
	</pre>
	<p>These commands should provide you with a running Karaf container with MaPSeq fully deployed...or very close to it.</p>	
      </subsection>
      <subsection name="Deploying your code using osgi commands">
	<p>If you have new code to deploy, the previous 1 through 6 steps to deploy to Karaf are required as they also add the dependencies necessary for any additional or newly developed code.</p>	
	<p>For instance, after writing a new module, you will need to deploy that bundle/jar to Karaf.  If you new module exists in the &lt;mapseq&gt;/mapseq-modules/mapseq-module-core project, then the following command will install it into Karaf and ("-s") start the bundle.</p>
	<pre>
karaf@root> osgi:install -s mvn:edu.unc.mapseq.mapseq-modules/mapseq-module-core/1.0-SNAPSHOT
	</pre>
	<p>Similarly, to deploy the entire Hello World example the following commands are used:</p>
	<pre>
karaf@root> osgi:install -s mvn:edu.unc.mapseq.mapseq-modules/mapseq-module-core/1.0-SNAPSHOT
karaf@root> osgi:install -s mvn:edu.unc.mapseq.mapseq-pipelines/mapseq-pipeline-hello-world/1.0-SNAPSHOT
karaf@root> osgi:install -s mvn:edu.unc.mapseq.mapseq-messaging.mapseq-message-services/mapseq-message-service-hello-world/1.0-SNAPSHOT
	</pre>
      </subsection>
      <subsection name="Notes">
	<p>See <a href="mapseq-karaf/index.html">MaPSeq Karaf</a></p>     
      </subsection>      
    </section>
    <p><span id="pageNavLeft"><a href="frontToEndIntegration-step3.html"> &lt;&lt; Back</a></span><span id="pageNavRight"><a href="frontToEndIntegration-step5.html">Continue &gt;&gt;</a></span></p>
  </body>
</document>
